<?xml version="1.0"?>
<launch>
      <arg name="robot_name"/>
      <arg name="tf_prefix"/>
      <arg name="robot_namespace"/>
      <arg name="prefix" default="$(arg tf_prefix)/"/> <!--diff drive needs this to be set-->
      <arg name="init_pose" default="-x 0.0 -y 0.0 -Y 0.0 -z 0.0"/>

      <arg name="local_planner" default="dwa" doc="Local planner can be either dwa, eband, base, teb or pose" />

      <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface" />

      <param name="robot_description" 
            command="$(find xacro)/xacro --inorder $(find mir_ur5_description)/urdf/mir_ur5.urdf.xacro transmission_hw_interface:=$(arg transmission_hw_interface)" />
                        <!-- robot_name:=$(arg robot_name)
                        robot_namespace:=$(arg robot_namespace)
                        tf_prefix:=$(arg robot_tf)"/>  -->
      
      <!-- <param name="robot_description" 
            command="$(find xacro)/xacro inorder $(find mir_description)/urdf/mir.urdf.xacro"/> Add two dashes before inorder-->

      <!--Spawn the MiR plattform into Gazebo-->
      <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
          args="-urdf -param robot_description -model $(arg robot_name) $(arg init_pose)" 
          respawn="false" output="screen"/>          
      
      <!-- Load ros_control controller configurations -->
      <rosparam file="$(find mir_ur5_description)/config/joint_state_controller.yaml" command="load" />  
      <rosparam file="$(find mir_ur5_description)/config/diffdrive_controller.yaml" command="load" subst_value="true"/>
      <!-- <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/> -->

      <!-- Start the controllers -->
      <node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen" ns="/$(arg robot_namespace)"
            args="joint_state_controller mobile_base_controller"/> <!--arm_controller -->

      <!--Include Kalman-filter later again. For now only use odom-->
      <!-- <include file="$(find mir_ur5_gazebo)/launch/ekf.launch.xml"/> -->

      <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>

      <node pkg="topic_tools" type="relay" name="b_scan_relay" args="b_scan scan"/>
      <node pkg="topic_tools" type="relay" name="f_scan_relay" args="f_scan scan"/>

      <node name="b_rep117_laser_filter" pkg="mir_driver" type="rep117_filter.py" output="screen">
            <remap from="scan" to="b_scan" />
            <remap from="scan_filtered" to="b_scan_rep117" />
      </node>
        
      <node name="f_rep117_laser_filter" pkg="mir_driver" type="rep117_filter.py" output="screen">
            <remap from="scan" to="f_scan" />
            <remap from="scan_filtered" to="f_scan_rep117" />
      </node>

      <!-- Add passive + mimic joints to joint_states topic -->
      <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
            <rosparam param="source_list" subst_value="true">[joint_states]</rosparam>
            <param name="rate" value="200.0" />
      </node>

      <include file="$(find mir_ur5_navigation)/launch/amcl.launch">
            <arg name="tf_prefix" value="$(arg tf_prefix)"/>
      </include>
      
      <include file="$(find mir_ur5_navigation)/launch/move_base.xml">
            <arg name="local_planner" value="$(arg local_planner)"/>
      </include>





      <!--For the ur5 robot arm-->
      <!-- <node pkg="rostopic" type="rostopic" name="fake_joint_calibration" args="pub /calibrated std_msgs/Bool true" />
      
      <arg name="sim" default="true" />
      <arg name="limited" default="false"/>
      <arg name="debug" default="false" /> -->
        
      <!-- Remap follow_joint_trajectory -->
      <!-- <remap if="$(arg sim)" from="/robot1_ns/follow_joint_trajectory" to="/robot1_ns/arm_controller/follow_joint_trajectory"/> -->
      
      <!-- Launch moveit -->
      <!-- <include file="$(find ur5_moveit_config)/launch/move_group.launch">
        <arg name="limited" default="$(arg limited)"/>
        <arg name="debug" default="$(arg debug)" />
      </include> -->

</launch>